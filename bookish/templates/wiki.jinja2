{% import "util.jinja2" as util with context %}


{# Helper macros #}

{% if not type_desc %}
    {% macro type_desc(block) -%}
    {%- endmacro %}
{% endif %}

{% if not category_desc %}
    {% macro category_desc(catname) -%}
    {%- endmacro %}
{% endif %}


{% macro print_link(href, text, summary='', status='', icon=None, exists=True, cls='') -%}
<a href="{{ rel(href, ".html") }}" class="link {{ status }} {% if exists == False %}missing{% endif %} {{ cls }}"
{%- if summary %}title="{{ summary }}"{% endif -%}>
    {%- if icon %}{{ util.print_icon(icon, cls="linkicon") }}{% endif -%}
    {%- if text %}{{ render(text) }}{% else %}{{ href }}{% endif -%}
</a>
{%- endmacro %}

{% macro print_dict_link(d) %}
    {{ print_link(rel(string(d.path, ".html")), d.text, d.summary, d.status, d.icon) }}
{% endmacro %}

{% macro print_heading(block, text, cls, level=None, id=None, attrs=None) %}
    {% set attrs = attrs or block.attrs | d({}) %}
    {% set level = level or block.level %}
    {% set text = text or block.text %}
    {% set id = id or block_id(block) %}
    {% set outer_caller = caller %}
    {% set labels = attrs.get("labels", "").split(",") %}

    <section class="{{ cls }} {{ attrs.display }} {{ attrs.status }}">
        <h{{ level }} class="label {{ cls }}" id="{{ id }}"
            data-title="{{ string(text) | striptags | lower | escape }}"
        >
            {% if attrs.glyph %}<i class="fa {{ attrs.glyph }}"></i>{% endif %}
            {{ render(text) }}
            {% if labels %}
                {% for label in labels %}
                    {% if label.strip() %}
                        <span class="tag">{{ label }}</span>
                    {% endif %}
                {% endfor %}
            {% endif %}
            <span class="headerlink"><a href="#{{ id }}">Â¶</a></span>
        </h{{ level }}>
        <div {% if id %}id="{{ id }}-body"{% endif %} class="content">
            {% if attrs.filtered == "yes" %}
                {% call print_filtered(attrs, sortable=False) %}
                    {{ outer_caller() }}
                {% endcall %}
            {% else %}
                {{ caller() }}
            {% endif %}
        </div>
    </section>
{% endmacro %}

{% macro print_link_box(link, show_type=True) %}
    {% set fields = link.fields | d({}) %}
    <a href="{{ rel(link.fullpath or link.value, ".html") }}" class="linkbox {% if fields.icon %}withicon{% endif %} {{ link.scheme }}">
        {%- if fields.icon -%}
            {{ util.print_icon(fields.icon, width=24, height=24) }}
        {%- endif -%}
        {% if link.text %}
            {{ render(link.text) }}
        {% elif fields.title %}
            {{ fields.title }}
        {% else %}
            {{ link.value }}
        {% endif %}
        {% if show_type %}
            <small>{{ type_desc(fields, path=link.fullpath) }}</small>
        {% endif %}
    </a>
{% endmacro %}

{% macro print_tag(tagname, block) %}
    <{{ tagname }} {{ util.print_attributes(block) }}>
        {{- render(block.text) -}}
    </{{ tagname }}>
{% endmacro %}

{% macro print_subtopic(href, text, body=None, summary=None, iconpath=None, cls="", tags="", pagetype="", is_here=False) %}
    <li class="item subtopics_item ind-item {{ cls }} {% if is_here %}here{% endif %} {% if iconpath %}with-icon{% endif %}"
        data-title="{{ string(text) | striptags | lower | escape }}{% if tags %} {{ tags | lower | escape }}{% endif -%}"
        {% if tags %}data-tags="{{ tags | lower | escape }}"{% endif -%}
    >
        {% if iconpath %}
            <div class="g">
                {% if href %}
                    <a href="{{ href }}">{{ util.print_image(iconpath, cls="icon medium") }}</a>
                {% else %}
                    {{ util.print_image(iconpath, cls="icon medium") }}
                {% endif %}
            </div>
        {% endif %}
        <p class="label">
            {% if href %}
                <a class="label-text {{ pagetype }}" href="{{ href }}">{{ string(text) }}</a>
            {% else %}
                <span class="label-text">{{ render(text) }}</span>
            {% endif %}
        </p>
        {% if summary %}
            <p class="summary">{{ summary }}</p>
        {% endif %}
        {% if body %}
            <div class="content">
                {{ render(body) }}
            </div>
        {% endif %}
    </li>
{% endmacro %}

{% macro print_metadata(name, value, tt=False) %}
    <div class="data">
        <div class="label">{{ name }}</div>
        <div class="content">
            {% if tt %}<tt>{% endif %}
            {{ value }}
            {% if tt %}</tt>{% endif %}
        </div>
    </div>
{% endmacro %}

{% macro print_subtopic_dict(d, fields=("tags",), body=None, cls="") %}
    {% if d.icon %}
        {% set icon = rel(icon_ref(d.icon)) %}
    {% else %}
        {% set icon = None %}
    {% endif %}
    {% set is_here = d.path == basepath %}
    {{
    print_subtopic(rel(d.path, ".html"), d.title, body, d.summary, iconpath=icon,
                   cls=d.get("cls", ""), tags=d.tags, pagetype=d.type,
                   is_here=is_here)
    }}
{% endmacro %}

{% macro print_notice(label, head, block, glyph, cls="") %}
    {% set attrs = block.attrs | d({}) %}
    {% set glyph = attrs.glyph or glyph %}
    {% set label = head if string(head).strip() else label %}

    <div class="notice ind-item {{ block.type }} {{ cls }} {{ attrs.display }}">
        <p class="label"><span class="g fa fa-fw {{ glyph }}"></span>{{ render(label) }}</p>
        <div class="content">
            {{ render(block.body) }}
        </div>
    </div>
{% endmacro %}

{% macro print_filtered(attrs, sortable) %}
    {% set fid = attrs.get("id", random_id()) %}
    {% set sortable = sortable or (attrs.get("sortable") == "true") %}

    {% if attrs.filtered == "no" %}
        {{ caller() }}
    {% else %}
        <div class="filtered" data-sortable="{{ "true" if sortable else "false" }}">
            <div class="interface">
                {% if attrs.filters %}
                    {% set filterlist = attrs.filters.split(",") %}
                {% endif %}
                {% for name in filterlist %}
                    {% set name = name.strip() %}
                    {% if name != "tags" %}
                        {% set label = name %}
                        <select id="{{ fid }}_{{ name }}" class="filter-menu" data-name="{{- name -}}">
                            <option value="*">{{ label }}</option>
                        </select>
                    {% endif %}
                {% endfor %}
            </div>
            <div class="original filtered-body">
                {{ caller() }}
            </div>
        </div>
    {% endif %}
{% endmacro %}

{% macro print_list_group(labels, key, hits, filters) %}
    {% if labels and key in labels %}
        {% set label = labels[key] %}
    {% elif key == "_" %}
        {% set label = "" %}
    {% else %}
        {% set label = key %}
    {% endif %}

    {% call print_heading(None, label, "heading pull left", id=key+"_group", level=2) %}
        {{ print_list_hits(hits, filters) }}
    {% endcall %}
{% endmacro %}

{% macro print_list_hits(hits, fields) %}
    <ul class="subtopics_item_group item_group">
    {%- for hit in hits -%}
        {%- set tc = "here" if hit.is_here else "" -%}
        {{- print_subtopic_dict(hit, fields) -}}
    {%- endfor -%}
    </ul>
{% endmacro %}


{# Rules #}

{% macro supertitle_rule(this) -%}
<span class="supertitle">{{ render(this.text) }}</span>
{%- endmacro %}
{% macro subtitle_rule(this) -%}
<span class="subtitle">{{ render(this.text) }}</span>
{%- endmacro %}

{% macro billboard_group_rule(this) %}
{% endmacro %}
{% macro billboard_rule(this) %}
{% endmacro %}

{% macro h_rule(this) %}
    {% call print_heading(this, this.text, "heading") %}
        {{ render(this.body) }}
    {% endcall %}
{% endmacro %}

{% macro section_rule(this) %}
    {% call print_heading(this, this.text, "section", level=2) %}
        {{ render(this.body) }}
    {% endcall %}
{% endmacro %}

{% macro related_section_rule(this) %}
    <ul class="relateds">
        {% for link in find_links(this) %}
            <li class="related">
                {{ print_link_box(link, show_type=False) }}
            </li>
        {% endfor %}
    </ul>
{% endmacro %}

{% macro toc_rule(this) %}
    <div id="toccontents">
    {{ render(this.body) }}
    </div>
{% endmacro %}

{% macro summary_rule(this) %}
    <p class="summary">{{ render(this.text) }}</p>
{% endmacro %}

{% macro para_rule(this) %}
    {{ print_tag("p", this) }}
{% endmacro %}

{% macro task_group_rule(this) %}
    <table class="tasks">
        <tr>
            <th>To...</th><th>Do this</th>
        </tr>
        {{ render(this.body) }}
    </table>
{% endmacro %}

{% macro task_rule(this) %}
    {% set look = this.attrs.display if this.attrs %}
    <tr>
        <td class="label task-desc {{ look }}">
            <p id="{{ block_id(this) }}">{{ render(this.text) }}</p>
        </td>
        <td class="content task-howto {{ look }}">{{ render(this.body) }}</td>
    </tr>
{% endmacro %}


{# Items #}

{% macro item_group_rule(this) %}
    <div class="{{ this.type }} item_group">
        {{ render(this.body) }}
    </div>
{% endmacro %}

{% macro item_rule(this) %}
    {% set status = string(this.attrs.status) if this.attrs %}
    {% set display = string(this.attrs.display) if this.attrs %}

    <div id="{{ block_id(this) }}" class="item {{ this.type }} {{ status }} {{ display }}"
        data-title="{{ string(this.text) | lower | escape }}"
    >
        <div class="label">
            {% if this.attrs and this.attrs.glyph %}
                <div class="g"><i class="fa {{ this.attrs.glyph }}"></i></div>
            {% endif %}
            {{ render(this.text) }}
        </div>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </div>
{% endmacro %}

{% macro subtopics_item_group_rule(this) %}
    <ul class="{{ this.type }} item_group">
        {{ render(this.body) }}
    </ul>
{% endmacro %}

{% macro subtopics_item_rule(this) %}
    {% set link = first_span_of_type(this.text, "link") %}
    {% if link %}
        {% set fields = link.fields | d({}) %}
        {% set summary = fields.summary %}
        {% set tags = fields.tags %}
        {% set container = fields.container %}

        {% if this.attrs and this.attrs.icon %}
            {% set icon = rel(icon_ref(this.attrs.icon)) %}
        {% elif link and fields and fields.icon %}
            {% set icon = rel(icon_ref(fields.icon)) %}
        {% else %}
            {% set icon = None %}
        {% endif %}
        {% set is_here = link.fullpath == basepath %}
        {{
        print_subtopic(None, this.text, this.body, summary=summary,
                       iconpath=icon, tags=tags, pagetype=fields.type,
                       is_here=is_here)
        }}
    {% endif %}
{% endmacro %}

{% macro env_variables_section_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% call print_heading(this, this.text, "section", level=2) %}
        {% call print_filtered(attrs, sortable=True) %}
            {{ render(this.body) }}
        {% endcall %}
    {% endcall %}
{% endmacro %}
{% macro env_variables_item_group_rule(this) %}
    <ul>
        {{ render(this.body) }}
    </ul>
{% endmacro %}
{% macro env_variables_item_rule(this) %}
    {% set status = this.attrs.status if this.attrs %}
    {% set attrs = this.attrs | d({}) %}

    <li class="env_variables_item item {{ status }}"
        id="{{ string(this.text) | lower }}"
        data-title="{{ string(this.text) | lower | escape }}"
        {% if attrs.tags %}data-tags="{{ attrs.tags }}"{% endif %}
    >
        <p class="label"><code>{{ render(this.text) }}</code></p>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </li>
{% endmacro %}

{% macro faqs_item_group_rule(this) %}
    <ul>
        {{ render(this.body) }}
    </ul>
{% endmacro %}
{% macro faqs_item_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% set id = block_id(this) %}

    <li class="faqs_item item collapsible collapsed"
        id="{{ id }}"
        data-title="{{ string(this.text) | lower | escape }}"
        {% if attrs.tags %}data-tags="{{ attrs.tags }}"{% endif %}
    >
        <p class="label">
            {{ render(this.text) }}
            <span class="headerlink"><a href="#{{ id }}">Â¶</a></span>
        </p>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </li>
{% endmacro %}

{% macro glossary_section_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% call print_heading(this, this.text, "section", level=2) %}
        {% call print_filtered(attrs, sortable=False) %}
            {{ render(this.body) }}
        {% endcall %}
    {% endcall %}
{% endmacro %}
{% macro glossary_item_group_rule(this) %}
    <div class="glossary_item_group">
        {{ render(this.body) }}
    </div>
{% endmacro %}
{% macro glossary_item_rule(this) %}
    {% set status = this.attrs.status if this.attrs %}
    {% set attrs = this.attrs | d({}) %}

    <div class="glossary_item item {{ status }}"
        id="{{ block_id(this) }}"
        data-title="{{ string(this.text) | lower | escape }}"
        {% if attrs.tags %}data-tags="{{ attrs.tags }}"{% endif %}
    >
        <p class="label"><a href="#{{block_id(this)}}">{{ render(this.text) }}</a></p>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </div>
{% endmacro %}

{% macro bullet_group_rule(this) %}
    <ul class="bullets">
    {{ render(this.body) }}
    </ul>
{% endmacro %}

{% macro bullet_rule(this) %}
    {% set glyph = this.attrs.glyph if this.attrs else None %}

    <li class="bullet {{ this.attrs.display if this.attrs }} {% if glyph %}with-glyph{% endif %}">
        {% if glyph %}
        <p class="g">
            <i class="fa fa-fw {{ this.attrs.glyph }}"></i>
        </p>
        {% endif %}

        <p class="label" {{ util.print_attributes(this) }}>
            {{- render(this.text) -}}
        </p>
        {% if this.body %}
        <div class="content">
            {{ render(this.body) }}
        </div>
        {% endif %}
    </li>
{% endmacro %}

{% macro ord_group_rule(this) %}
    <ol>
    {{ render(this.body) }}
    </ol>
{% endmacro %}

{% macro ord_rule(this) %}
    <li>
        <p>{{ render(this.text) }}</p>
        {{ render(this.body) }}
    </li>
{% endmacro %}

{% macro dt_group_rule(this) %}
    <div class="defs">
    {{ render(this.body) }}
    </div>
{% endmacro %}

{% macro dt_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% set glyph = attrs.glyph %}
    <div id="{{ block_id(this) }}" class="def {{ attrs.status }} {{ attrs.display | d('') }}">
        <p class="label {% if glyph %}with-glyph{% endif %}">
            {%- if glyph %}
                <span class="fa fa-fw {{ this.attrs.glyph }}"></span>
            {% endif -%}
            {{ render(this.text) }}
        </p>
        <div class="content">
            {{- render(this.body) -}}
        </div>
    </div>
{% endmacro %}


{# Notices #}

{% macro tip_group_rule(this) %}
    <div class="notices ind-group">{{ render(this.body) }}</div>
{% endmacro %}
{% macro note_group_rule(this) %}
    <div class="notices ind-group">{{ render(this.body) }}</div>
{% endmacro %}
{% macro warning_group_rule(this) %}
    <div class="notices ind-group">{{ render(this.body) }}</div>
{% endmacro %}

{% macro note_rule(this) %}
    {{ print_notice("Note", this.text, this, "fa-info-circle") }}
{% endmacro %}
{% macro tip_rule(this) %}
    {{ print_notice("Tip", this.text, this, "fa-lightbulb-o") }}
{% endmacro %}
{% macro warning_rule(this) %}
    {{ print_notice("Warning", this.text, this, "fa-exclamation-triangle") }}
{% endmacro %}

{% macro new_rule(this) %}
    {{ print_notice("New", this.text, this, "fa-star") }}
{% endmacro %}
{% macro changed_rule(this) %}
    {{ print_notice("Changed", this.text, this, "fa-refresh") }}
{% endmacro %}
{% macro dev_rule(this) %}
    {{ print_notice("Developer", this.text, this, "fa-flask") }}
{% endmacro %}
{% macro improved_rule(this) %}
    {{ print_notice("Improved", this.text, this, "fa-line-chart") }}
{% endmacro %}
{% macro fixed_rule(this) %}
    {{ print_notice("Fixed", this.text, this, "fa-check-circle") }}
{% endmacro %}
{% macro bug_rule(this) %}
    {{ print_notice("Unresolved", this.text, this, "fa-exclamation-circle") }}
{% endmacro %}
{% macro beta_rule(this) %}
    <div class="beta" style="background-image: url('{{ rel("/images/beta.svg") }}')">
        {{ render(this.body) }}
    </div>
{% endmacro %}

{% macro platform_rule(this) %}
    {% set platform = string(this.text).strip() %}
    {% if platform == "Mac" %}
        {% set glyph = "fa-apple" %}
    {% elif platform == "Windows" %}
        {% set glyph = "fa-windows" %}
    {% elif platform == "Linux" %}
        {% set glyph = "fa-linux" %}
    {% endif %}
    {{ print_notice(string(this.text), None, this, glyph, cls=platform.lower()) }}
{% endmacro %}


{# Lists, searches, and filters #}

{% macro filter_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% call print_filtered(attrs) %}
        {{ render(this.body) }}
    {% endcall %}
{% endmacro %}

{% macro list_group_rule(this) %}
    {{ render(this.body) }}
{% endmacro %}
{% macro list_rule(this) %}
    {%- set attrs = this.attrs | d({}) -%}
    {%- set filtered = attrs.filtered -%}
    {%- set filters = (attrs.filters | d('')).split() %}

    {% if this.hits %}
        <div class="hitlist {{ attrs.display | d('') }}">
            {% call print_filtered(attrs) %}
                {{ print_list_hits(this.hits, filters) }}
            {% endcall %}
        </div>
    {% elif this.groups %}
        <div class="hitlist {{ attrs.display | d('') }}">
            {% call print_filtered(attrs) %}
                {% for key, hits in this.groups | dictsort %}
                    {% if key != "_" %}
                        {{ print_list_group(this.labels, key, hits, filters) }}
                    {% endif %}
                {% endfor %}
                {% if "_" in this.groups %}
                    {{ print_list_group(this.labels, "_", this.groups["_"], filters) }}
                {% endif %}
            {% endcall %}
        </div>
    {% else %}
        {{ render(this.body) }}
    {% endif %}
{% endmacro %}

{% macro search_group_rule(this) %}
    {{ render(this.body) }}
{% endmacro %}
{% macro search_rule(this) %}
    {%- set attrs = this.attrs | d({}) -%}
    {%- set blockid = block_id(this) -%}

    <div class="livesearch">
        <div style="position: relative">
            <span class="search-button"><i class="fa fa-search"></i></span>
            <input id="{{ blockid }}"
                   value="{{ q | escape }}"
                   data-popup="false"
                   data-require="{{ attrs.get("require", "") | escape }}"
                   class="search" placeholder="Search" autocomplete="off"
            >
        </div>
        <div id="{{ blockid }}-results" class="livesearch-results"></div>
    </div>
{% endmacro %}

{% macro pre_rule(this) -%}
    <div class="code-container">{{- format_code(this, pre=True) -}}</div>
{%- endmacro %}

{% macro literate_rule(this) %}
    <div class="literate">
        <div class="code-container">{{- format_code(this, pre=True, linenos=True, code_attr="combined") }}</div>
        <div class="text-container">
            {% for pre in subblocks_of_type(this, "pre") %}
                <div id="{{ pre.id }}" class="textgroup-{{ pre.id }}">
                    <span class="textgroup-info">{{ pre.startline }} - {{ pre.endline }}</span>
                    {{ render(pre.body) }}
                </div>
            {% endfor %}
        </div>
    </div>

{% endmacro %}

{% macro sep_rule(this) %}
    {% set look = this.attrs.display if this.attrs %}
    {% set body = this.body %}
    <div {% if this.attrs and "id" in this.attrs %}id="{{ this.attrs.id }}"{% endif %} class="sep {{ look }} {{ "titled" if string(this.text).strip() else "untitled" }} {{ "container" if body else "empty" }}">
        <div class="label">{{- render(this.text) -}}</div>
        {% if body %}
            <div class="content">
            {{ render(body) }}
            </div>
        {% endif %}
    </div>
{% endmacro %}

{% macro block_def_group_rule(this) %}{% endmacro %}
{% macro block_def_rule(this) %}{% endmacro %}


{# Links #}

{% macro Glyph_link_rule(this) -%}
    <i class="fa {{ this.value }}"></i>
{%- endmacro %}

{% macro Bit_link_rule(this) -%}
    <span class="{{ this.value }} bit">{{ val }}</span>
{%- endmacro %}

{% macro Icon_link_rule(this) -%}
    {{- util.print_icon(this.value, cls="icon medium") -}}
{%- endmacro %}
{% macro Largeicon_link_rule(this) -%}
    {{- util.print_icon(this.value, cls="icon large") -}}
{%- endmacro %}
{% macro Smallicon_link_rule(this) -%}
    {{- util.print_icon(this.value, cls="icon small") -}}
{%- endmacro %}

{% macro Image_link_rule(this) -%}
    <img class="img-responsive" src="{{ rel(this.value.strip()) }}">
{%- endmacro %}
{% macro img_rule(this) %}
    <img class="img-responsive" src="{{ rel(this.value.strip()) }}">
{% endmacro %}

{% macro Anim_link_rule(this) -%}
    {% set static = this.value.replace(".gif", "_poster.gif") %}
    <img class="animated running"
         src="{{ rel(this.value) }}"
         data-static="{{ rel(static) }}"
         data-anim="{{ rel(this.value) }}"
    >
{%- endmacro %}

{% macro Wp_link_rule(this) -%}
    <a class="wp" href="{{ this.value }}">
        {{ render(this.text) }}<i class="fa fa-wikipedia-w"></i>
    </a>
{%- endmacro %}

{% macro Fold_link_rule(this) -%}
    <label class="fold-text" for="fold-{{ this.value }}">{{ render(this.text) }}<sup>{{ this.value }}</sup></label>
{%- endmacro %}

{% macro link_rule(this) -%}
    {%- set fields = this.fields | default({}) -%}
    {{- print_link(this.fullpath or this.value, this.text or this.fallback_text or fields.title, fields.summary, fields.status, fields.icon, this.exists, cls=this.scheme) -}}
{%- endmacro %}


{# Backlink block #}

{% macro backlink_rule(this) %}
    <li>{{ render(this.text) }}</li>
{% endmacro %}


{# Spans #}

{% macro strong_rule(this) -%}
<strong>{{ render(this.text) }}</strong>
{%- endmacro %}

{% macro ui_rule(this) -%}
<strong class="ui">{{ render(this.text) }}</strong>
{%- endmacro %}

{% macro em_rule(this) -%}
<em>{{ render(this.text) }}</em>
{%- endmacro %}

{% macro code_rule(this) -%}
<code>{{- render(this.text) -}}</code>
{%- endmacro %}

{% macro q_rule(this) -%}
&ldquo;{{ render(this.text) }}&rdquo;
{%- endmacro %}

{% macro print_table_cell(cell, tag="td") %}
    <{{ tag }} {{ util.print_attributes(cell) }}>
        {%- if cell.text -%}
            <p>
                {% if cell.attrs and cell.attrs.glyph %}
                    <i class="fa fa-fw {{ cell.attrs.glyph }}"></i>
                {% endif %}
                {{- render(cell.text) -}}
            </p>
        {%- endif -%}
        {%- for blk in cell.body %}
            {{ render(blk) }}
        {% endfor -%}
    </{{ tag }}>
{% endmacro %}

{% macro print_table_rows(rows) %}
    {% for row in rows %}
    <tr {{ "class='divider'" if row.divider else "" }}>
        {% for cell in row.body %}
            {% if cell.role == "th" %}
                {{ print_table_cell(cell, "th") }}
            {% else %}
                {{ print_table_cell(cell) }}
            {% endif %}
        {% endfor %}
    </tr>
    {% endfor %}
{% endmacro %}

{% macro table_rule(this) %}
    <table class="table">
        {% if this.thead %}
        <thead>
        {{ print_table_rows(this.thead) }}
        </thead>
        {% endif %}
        <tbody>
        {{ print_table_rows(this.body) }}
        </tbody>
    </table>
{% endmacro %}

{% macro pxml_rule(this) %}
<{{ this.tag }} {{ util.print_attributes(this) }}>
    {{ render(this.text) }}
    {{ render(this.body) }}
</{{ this.tag }}>
{% endmacro %}

{% macro xml_rule(this) -%}
    {% if this.tag in ("br", "img") -%}
        <{{ this.tag }} {{ util.print_attributes(this) }} />
    {%- else -%}
        <{{ this.tag }} {{ util.print_attributes(this) }}>
            {{- render(this.text) -}}
        </{{ this.tag }}>
    {%- endif %}
{%- endmacro %}

{% macro env_rule(this) -%}
{{ config.get(this.name, "") }}
{%- endmacro %}

{% macro var_rule(this) -%}
    &#x2039;<var>{{- render(this.text) -}}</var>&#x203A;
{%- endmacro %}

{%- macro single_key(keyname) -%}
    {%- if keyname == "Shift" -%}
        <kbd>&#8679; Shift</kbd>
    {%- elif keyname == "Option" -%}
        <kbd>&#8997; Option</kbd>
    {%- elif keyname == "Cmd" or keyname == "Command" -%}
        <kbd>&#8984;</kbd>
    {%- elif keyname == "Esc" %}
        <kbd>&#9099; Esc</kbd>
    {%- elif keyname == "Return" -%}
        <kbd>&#9166; Return</kbd>
    {%- elif keyname == "Backspace" -%}
        <kbd>&#9003; Backspace</kbd>
    {%- elif keyname == "Del" -%}
        <kbd>&#8998; Del</kbd>
    {%- elif keyname == "Ctrl" -%}
        <kbd>&#8963; Ctrl</kbd>
    {%- elif keyname == "Up" -%}
        <kbd>&#8593;</kbd>
    {%- elif keyname == "Down" -%}
        <kbd>&#8595;</kbd>
    {%- elif keyname == "Left" -%}
        <kbd>&#8592;</kbd>
    {%- elif keyname == "Right" -%}
        <kbd>&#8594;</kbd>
    {%- elif keyname == "Tab" -%}
        <kbd>&#8677; Tab</kbd>
    {%- elif keyname in ("LMB", "MMB", "RMB", "mouse", "mouse_wheel",
                         "Up", "Down", "Left", "Right") -%}
        {{ util.print_image(rel("/icons/KEYS/" + keyname + ".svg"), title=keyname, cls="keyicon") }}
    {%- else -%}
        <kbd>{{ keyname }}</kbd>
    {%- endif -%}
{%- endmacro -%}

{%- macro print_keys(keys) -%}
    <span class="keys">
    {%- for keyname in keys -%}
        {{ single_key(keyname) }}
        {%- if not loop.last %} + {% endif -%}
    {%- endfor -%}
    </span>
{%- endmacro -%}

{%- macro keys_rule(this) -%}
    {{ print_keys(this["keys"]) }}
{%- endmacro %}


{# Applications #}

{#{% macro toc(root) %}#}
{#    <div class="parent-div">#}
{#        <h2 class="parent-title">#}
{#            <a href="{{ root.fullpath }}">#}
{#            {{ render(first_subblock_of_type(root.body, "title").text) }}#}
{#            </a>#}
{#        </h2>#}
{#        {{ render(find(root.body, '@role="section".@id="subtopics"')) }}#}
{#    </div>#}
{#{% endmacro %}#}

{#{% macro quote_rule(this) %}#}
{#    <figure class="quote">#}
{#        <blockquote>{{ render(this.body) }}</blockquote>#}
{#        <figcaption>{{ render(this.text) }}</figcaption>#}
{#    </figure>#}
{#{% endmacro %}#}

{% macro flow_rule(this) %}
    {% set attrs = this.attrs | default({}) %}
    {% set links = docroot.flow_links %}
    {% set indx = docroot.flow_index | default(0) | int %}
    {% set numlinks = links | length %}

    <div class="flow-controls {{ this.display }}" style="{{ this.style }}">
        {% if attrs.hide_title != "true" %}
            <p class="label">{{ render(docroot.flow_title) }}</p>
        {% endif %}
        {% if attrs.show == "list" %}
            <ul>
            {% for link in links %}
                {% if attrs.hide_self != "true" or loop.index0 != indx %}
                    <li>{{ render(link) }}</li>
                {% endif %}
            {% endfor %}
            </ul>
        {% else %}
            {% if docroot.previous %}
                <p class="prev-link">
                    {{ render(docroot.previous) }}
                </p>
            {% endif %}
            {% if links %}
                <p class="selector">
                    <label for="select_{{ block_id(this) }}">{{ render(this.title) }}</label>
                    <select id="select_{{ block_id(this) }}" onchange="window.location=this.value">
                        {% for link in links %}
                            <option value="{{ rel(link.fullpath) }}" {{ "selected" if loop.index == indx + 1 }}>{{ string(link) }}</option>
                        {% endfor %}
                    </select>
                </p>
            {% endif %}
            {% if docroot.next %}
                <p class="next-link">
                    {{ render(docroot.next) }}
                </p>
            {% endif %}
        {% endif %}
    </div>
{% endmacro %}

{% macro col_group_rule(this) %}
    {% set subcount = this.body | length %}

    <div class="row">
        {%- for item in this.body -%}
            {%- set attrs = item.attrs | d({}) -%}
            <div class="col col_1_of_{{ subcount }} {{ attrs.display }}" {{ util.print_attributes(item) }}>
                {{ render(item.body) }}
            </div>
        {%- endfor -%}
        <div class="clear"></div>
    </div>
{% endmacro %}

{% macro tab_group_rule(this) %}
    {% set base = block_id(this) %}

    {#
    Jinja has a really bad limitation where you can't set a variable inside a
    loop, so we have to hack this dumb workaround using a list
     #}
    {% set selected = [1] %}
    {% for tab in this.body %}
        {% if tab.attrs and tab.attrs.selected == "true" %}
            {% set _ = selected.append(loop.index) %}
        {% endif %}
    {% endfor %}
    {% set selected = selected.pop() %}

    <div class="tab-group">
        <div class="tab-heading">
            {%- for tab in this.body -%}
                {% set attrs = tab.attrs | d({}) %}
                <div class="label {% if loop.index == selected %}selected{% endif %} {{ attrs.display }}" for="{{ base }}_{{ loop.index }}">
                    {% if attrs.glyph %}
                        <i class="fa {{ attrs.glyph }}"></i>
                    {% endif %}
                    {{ render(tab.text) }}
                </div>
            {%- endfor -%}
        </div>
        <div class="tab-bodies">
            {% for tab in this.body %}
                <div class="content {% if loop.index == selected %}selected{% endif %}" id="{{ base }}_{{ loop.index }}">
                    {{ render(tab.body) }}
                </div>
            {% endfor %}
        </div>
    </div>
{% endmacro %}

{% macro fig_group_rule(this) %}
    {{ render(this.body) }}
{% endmacro %}

{% macro fig_rule(this) %}
    {% set summ = first_subblock_of_type(this.body, "summary") %}
    {% set body = remove_subblocks(this.body, ("summary",)) %}
    {% set attrs = this.get("attrs", {}) %}
    {% set nobody = "" if body else "nobody" %}

    <div class="fig {{ attrs.display }} {{ nobody }}">
        <div class="figure-img">
            <figure class="unzoomed">
                {{- render(this.text) -}}
                {%- if summ -%}
                    <figcaption>{{ render(summ.text) }}</figcaption>
                {%- endif -%}
            </figure>
        </div>
        {% if body %}
            <div class="figure-body content">
                {{ render(body) }}
            </div>
        {% endif %}
        <div class="clear"></div>
    </div>
{% endmacro %}

{% macro picture_group_rule(this) %}
    <table class="pictures">
        {% for pic in this.body %}
        {% endfor %}
    </table>
{% endmacro %}

{% macro tshoot_group_rule(this) %}
    <table class="tshoot">
        <thead>
            <th class="if">If you have...</th>
            <th class="then" colspan="2">Do this</th>
        </thead>
    {% for row in this.body %}
        {% set subs = row.body %}
        {% set shoots = [] %}
        {% if subs and subs[0].type == "tshoot_group" %}
            {% set shoots = subs[0].body %}
            {% set subs = subs[1:] %}
        {% endif %}
        {% set span = shoots | count %}
        {% if subs %}{% set span = span + 1 %}{% endif %}

        {% for shoot in shoots %}
            <tr>
                {% if loop.first %}
                    <td rowspan="{{ span }}" class="if level1">{{ render(row.text) }}</td>
                {% endif %}
                <td class="if level2">{{ render(shoot.text) }}</td>
                <td class="then qual">{{ render(shoot.body) }}</td>
            </tr>
        {% endfor %}
        {% if subs %}
            <tr>
                {% if not shoots %}
                    <td class="if level1">{{ render(row.text) }}</td>
                {% endif %}
                <td colspan="2" class="then unqual">{{ render(subs) }}</td>
            </tr>
        {% endif %}
    {% endfor %}
    </table>
{% endmacro %}

{% macro box_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% if attrs.fold %}
        <input type="checkbox" class="fold-state" name="fold-{{ attrs.fold }}" id="fold-{{ attrs.fold }}">
    {% endif %}

    {% if string(this.text).strip() %}
        <p class="box-label">{{ render(this.text) }}</p>
    {% endif %}
    <div class="box {{ attrs.display }} {% if attrs.fold %}foldable folded{% endif %}" {% if attrs.style %}style="{{ attrs.style }}"{% endif %}>
        {% if attrs.fold %}
            <label class="fold-return" for="fold-{{ attrs.fold }}">{{ attrs.fold }}</label>
        {% endif %}
        <div class="content">
            {{ render(this.body) }}
        </div>
    </div>
{% endmacro %}

{% macro disclosure_rule(this) %}
    <div class="disclosure collapsible collapsed">
        <p class="label">{{ render(this.text) }}</p>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </div>
{% endmacro %}

{% macro bubble_group_rule(this) %}
    <div class="bubbles">
        {{ render(this.body) }}
    </div>
{% endmacro %}
{% macro bubble_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    <div class="bubble {{ attrs.dir }} {{ attrs.display }}">
        {% if this.text %}<p>{{ render(this.text) }}</p>{% endif %}
        {{ render(this.body) }}
    </div>
{% endmacro %}

{% macro gloss_rule(this) %}
    <div class="gloss">
        <p class="label"><strong>{{ render(this.text) }}</strong></p>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </div>
{% endmacro %}

{% macro video_group_rule(this) %}
    {{ render(this.body) }}
{% endmacro %}
{% macro video_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% set summ = first_subblock_of_type(this.body, "summary") %}
    <figure>
        <video
            src="{{ rel(attrs.src) }}"
            type="{{ attrs.get("type", "video/mp4") }}"
            controls="{{ attrs.get("controls", "controls") }}"
            {% if attrs.loop == "true" %}loop{% endif %}
            {% if attrs.autoplay == "true" %}autoplay{% endif %}
            class="img-responsive {{ attrs.get("display", "") }}"
        ></video>
        {%- if summ -%}
            <figcaption>{{ render(summ.text) }}</figcaption>
        {%- endif -%}
    </figure>
{% endmacro %}

{% macro vimeo_group_rule(this) %}
    {{ render(this.body) }}
{% endmacro %}
{% macro vimeo_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% set url = "https://player.vimeo.com/video/" + string(attrs.id) %}
    <div id="{{ attrs.id }}" class="video-container" title="{{ string(this.text) }}">
        <iframe src="{{ url | escape }}"
            data-vimeo-id="{{ attrs.id | escape }}"
            title="{{ string(this.text) | escape }}"
            class="vimeo video"
            frameborder="0"
            webkitallowfullscreen mozallowfullscreen allowfullscreen
        ></iframe>
    </div>
{% endmacro %}

{% macro vimeo_ref_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    {% set vid = string(attrs.id).strip() %}
    {% set url = "https://vimeo.com/" + vid %}
    {% set glyph = attrs.get("glyph", "fa-film") %}

    <div class="vimeo-reference" data-vid="{{ vid }}">
        <div class="thumbnail"></div>
        <div class="label">
            <a href="{{ url }}">{{ render(this.text) }}</a>
        </div>
        <div class="content">
            {{ render(this.body) }}
        </div>
    </div>
{% endmacro %}

{% macro chart_rule(this) %}
    {% set attrs = this.attrs | d({}) %}
    <table class="chart-table">
        <tr><td></td><td class="top"><div>{{ attrs.top }}</div></td><td></td></tr>
        <tr>
            <td class="left"><div>{{ attrs.left }}</div></td>
            <td class="chart-cell">
                <div class="chart" id="{{ attrs.id }}"
                    data-data="{{ attrs.data | escape }}"
                    data-options="{{ attrs.options | escape }}"
                ></div>
            </td>
            <td class="right"><div>{{ attrs.right }}</div></td>
        </tr>
        <tr><td></td><td class="bottom"><div>{{ attrs.bottom }}</div></td><td></td></tr>
    </table>
{% endmacro %}

{% macro imagegrid_rule(this) %}
    <div class="image-grid">
        {{ render(this.body) }}
    </div>
{% endmacro %}

{% macro compare_images_rule(this) %}
    {% set attrs = this.get("attrs", {}) %}
    {% set summ = first_subblock_of_type(this.body, "summary") %}
    {% set body = remove_subblocks(this.body, ("summary",)) %}
    <figure class="compare-img">
        <div class="image-comparison">
            <img class="img2" src="{{ rel(attrs.image2) }}" />
            <img class="img1" src="{{ rel(attrs.image1) }}" />
        </div>
        {%- if summ -%}
            <figcaption>{{ render(summ.text) }}</figcaption>
        {%- endif -%}
    </figure>
{% endmacro %}

{% macro span_rule(this) -%}
<span class="{{ this.class }}">{{ render(this.text) }}</span>
{%- endmacro %}

{# Root #}

{% macro root_rule(this) %}
    {{ render(this.body) }}
{% endmacro %}

